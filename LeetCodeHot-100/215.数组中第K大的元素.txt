//动态维护一个K大小的小根堆

//代码实现：
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) 
    {
        //维护一个小根堆，队中维持k个最大的数
        priority_queue<int, vector<int>, greater<int>> pq;
        for(int i = 0; i <nums.size(); i++)
        {
            if(pq.size() < k)
            {
                pq.push(nums[i]);
            }
            else
            {
                if(pq.top() < nums[i])
                {
                    pq.pop();
                    pq.push(nums[i]);
                }
            }
        }
        return pq.top();
    }
};